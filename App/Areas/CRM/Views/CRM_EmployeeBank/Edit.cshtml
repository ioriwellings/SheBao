@model Langben.DAL.EmployeeBank

@{
    Layout = "~/Views/Shared/CRMEdit.cshtml";
}
@using Common
@using Models


<script type="text/javascript">
    $(function () {
        // 获取待编辑内容并显示
        var id = '@ViewBag.Id';
        var eid = '@ViewBag.eId';
        $.ajax({
            url: "/api/CRM_EmployeeBankApi/GetBank?id=" + +id + "&eid=" + eid,
            //type: "POST",
            // async: false,
            success: function (res) {
                var jsonarray = eval("(" + res + ")");
                $("#EmployeeId").val(@ViewBag.eId);
                $("#Id").val(jsonarray.bankList[0].Id);
                $("#AccountName").val(jsonarray.bankList[0].AccountName);
                $("#Bank").val(jsonarray.bankList[0].Bank);
                $("#BranchBank").val(jsonarray.bankList[0].BranchBank);
                $("#Account").val(jsonarray.bankList[0].Account);
                //$("#IsDefault").val(jsonarray.bankList[0].IsDefault);
                $("#Remark").val(jsonarray.bankList[0].Remark);
                $("input[type=radio][value=" + jsonarray.bankList[0].BState + "]").attr("checked", 'checked');
                $("#CreateTime").val(jsonarray.bankList[0].CreateTime);
                $("#CreatePerson").val(jsonarray.bankList[0].CreatePerson);
            }
        })
    });
    function Check() {
        var i = 0;
        var companyId = $("#AccountName").val();//开户名称
        if (companyId == '') {
            $("#spAccountName").show();
            $("#AccountName").attr("class", "input-validation-error");
            i++;
        }
        else {
            $("#spAccountName").hide();
            $("#AccountName").attr("class", "valid");
        }
        var certificateType = $("#Bank").val();//开户银行
        if (certificateType == '') {
            $("#spBank").show();
            $("#Bank").attr("class", "input-validation-error");
            i++;
        }
        else {
            $("#spBank").hide();
            $("#Bank").attr("class", "valid");
        }
        var sex = $("#BranchBank").val();//支行名称
        if (sex == '') {
            $("#spBranchBank").show();
            $("#BranchBank").attr("class", "input-validation-error");
            i++;
        }
        else {
            $("#spBranchBank").hide();
            $("#BranchBank").attr("class", "valid");
        }
        var accountType = $("#Account").val();//帐号
        if (accountType == '') {
            $("#spAccount").show();
            $("#Account").attr("class", "input-validation-error");
            i++;
        }
        else {
            $("#spAccount").hide();
            $("#Account").attr("class", "valid");
        }
        if (i != 0) {
            return false;
        }
        else { return true; }
    }

    //返回
    function Return() {
        BackList('CRM_EmployeeBank/Index/@ViewBag.eId');
    }
</script>
@section CurentPlace {
    修改
}

@using (Html.BeginForm("", "../api/CRM_EmployeeBankApi/Put"))
{
    <fieldset>
        <legend>
            <input class="a2 f2" type="submit" value="修改" />
            <input class="a2 f2" type="button" onclick="CloseDialog()" value="关闭" />
        </legend>
        <div class="bigdiv">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.EmployeeId)
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountName)：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AccountName, new { @onblur = "Check()" })
                @Html.ValidationMessageFor(model => model.AccountName)
                <span id="spAccountName" style="display:none;color:red" class="">开户名称不能为空</span>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Bank)：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Bank, new { @onblur = "Check()" })
                @Html.ValidationMessageFor(model => model.Bank)
                <span id="spBank" style="display:none;color:red" class="">开户银行不能为空</span>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.BranchBank)：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.BranchBank, new { @onblur = "Check()" })
                @Html.ValidationMessageFor(model => model.BranchBank)
                <span id="spBranchBank" style="display:none;color:red" class="">支行名称不能为空</span>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Account)：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Account, new { @onblur = "Check()" })
                @Html.ValidationMessageFor(model => model.Account)
                <span id="spAccount" style="display:none;color:red" class="">帐号不能为空</span>
            </div>

            <br style="clear: both;" />
            <div class="editor-label">
                @Html.LabelFor(model => model.Remark)：
            </div>
            <div class="textarea-box">
                @Html.TextAreaFor(model => model.Remark)
                @Html.ValidationMessageFor(model => model.Remark)
            </div>
            <br style="clear: both;" />
            <div class="editor-label">
                @Html.LabelFor(model => model.State)：
            </div>
            <div class="editor-field">
                <input name="State" type="radio" value="启用" />启用
                <input name="State" type="radio" value="停用" />停用
            </div>@Html.HiddenFor(model => model.CreateTime) @Html.HiddenFor(model => model.CreatePerson)
        </div>
    </fieldset>
}




