@model Langben.DAL.CRM_CompanyBankAccount_Audit

@{
    Layout = "~/Views/Shared/Edit.cshtml";
}
@using Common
@using Models
 @section CurentPlace {
    修改  
}

@using (Html.BeginForm("", "api/CRM_CompanyBankAccount_AuditApi/Put"))
{
    <fieldset>
        <legend>
            <input class="a2 f2" type="submit" value="修改" />
            <input class="a2 f2" type="button" onclick="BackList('CRM_CompanyBankAccount_Audit')" value="返回列表" />
        </legend>
        <div class="bigdiv">
            @Html.HiddenFor(model => model.ID )      
            <div class="editor-label">
                @Html.LabelFor(model => model.CRM_CompanyBankAccount_ID) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.CRM_CompanyBankAccount_ID, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.CRM_CompanyBankAccount_ID) 
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CRM_Company_Audit_ID) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.CRM_Company_Audit_ID, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.CRM_Company_Audit_ID) 
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CRM_Company_ID) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.CRM_Company_ID, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.CRM_Company_ID) 
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.Bank)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Bank)
                @Html.ValidationMessageFor(model => model.Bank)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.Account)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Account)
                @Html.ValidationMessageFor(model => model.Account)
            </div>@Html.HiddenFor(model => model.CreateTime )      
            <div class="editor-label">
                @Html.LabelFor(model => model.CreateUserID) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.CreateUserID, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.CreateUserID) 
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CreateUserName)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CreateUserName)
                @Html.ValidationMessageFor(model => model.CreateUserName)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.BranchID) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.BranchID, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.BranchID) 
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.OperateStatus) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.OperateStatus, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.OperateStatus) 
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.OperateNode) ：
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.OperateNode, new {  onkeyup = "isInt(this)", @class="text-box single-line" })
                @Html.ValidationMessageFor(model => model.OperateNode) 
            </div>
        </div>
    </fieldset>
}



    <script type="text/javascript">

        $(function () {
            

            // 获取待编辑内容并显示
            var id = '@ViewBag.Id';
            $.ajax({
                url: "/api/CRM_CompanyBankAccount_AuditApi/" + id,
                type: "POST",
                // async: false,
                success: function (res) {
                    $("#ID").val(res.ID);$("#CRM_CompanyBankAccount_ID").val(res.CRM_CompanyBankAccount_ID);$("#CRM_Company_Audit_ID").val(res.CRM_Company_Audit_ID);$("#CRM_Company_ID").val(res.CRM_Company_ID);$("#Bank").val(res.Bank);$("#Account").val(res.Account);$("#CreateTime").val(res.CreateTime);$("#CreateUserID").val(res.CreateUserID);$("#CreateUserName").val(res.CreateUserName);$("#BranchID").val(res.BranchID);$("#OperateStatus").val(res.OperateStatus);$("#OperateNode").val(res.OperateNode);
                }
            })
        });
        

    </script>



