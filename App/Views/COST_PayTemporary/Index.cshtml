
@model Langben.DAL.COST_PayTemporary 
@{ Layout = "~/Views/Shared/Index.cshtml"; }
@using Common 
@using Models
<div id="divQuery">
    
    <div class='input_search' style="padding-top:10px;">
        <a href="#" onclick="flexiQuery()" class="easyui-linkbutton" data-options="iconCls:'icon-search'">
            查 询
        </a>
    </div>
</div>
 <br style="clear: both;" />

<script type="text/javascript" language="javascript">
        $(function () {

            $('#flexigridData').datagrid({
                title: '费用_社保支出导入临时表', //列表的标题
                iconCls: 'icon-site',
                width: 'auto',
                height: 'auto',
                //nowrap: false,
                striped: true,
                collapsible: true,
                url: '../COST_PayTemporary/GetData', //获取数据的url
                sortName: 'ID',
                sortOrder: 'desc',
                idField: 'ID',

                toolbar: [
                 
                     {
                        text: '详细',
                        iconCls: 'icon-search',
                        handler: function () {
                            return getView();
                        }
                    }, {
                        text: '创建',
                        iconCls: 'icon-add',
                        handler: function () {
                            return flexiCreate();
                        }
                    },  {
                        text: '删除',
                        iconCls: 'icon-remove',
                        handler: function () {
                            return flexiDelete();
                        }
                    }, {
                        text: '修改',
                        iconCls: 'icon-edit',
                        handler: function () {
                            return flexiModify();
                        }
                    }, {
                        text: '导出',
                        iconCls: 'icon-excel',
                        handler: function () {
                            return flexiExport();
                        }
                    } ],
                columns: [[
                   
                    
					{ field: 'YearMonth', title: '@Html.DisplayNameFor(model => model.YearMonth)', width: 19 }
					,{ field: 'CreateTime', title:  '@Html.DisplayNameFor(model => model.CreateTime)', width: 19
                    , formatter: function (value, rec) {
                        if (value) {
                            return dateConvert(value);
                        } 
                    } 
}
					,{ field: 'CreateUserID', title:  '@Html.DisplayNameFor(model => model.CreateUserID)', width: 19 }
					,{ field: 'CreateUserName', title:  '@Html.DisplayNameFor(model => model.CreateUserName)', width: 19 }
					,{ field: 'BranchID', title:  '@Html.DisplayNameFor(model => model.BranchID)', width: 19 }
					,{ field: 'PersonName', title:  '@Html.DisplayNameFor(model => model.PersonName)', width: 19 }
					,{ field: 'CardId', title:  '@Html.DisplayNameFor(model => model.CardId)', width: 19 }
					,{ field: 'PersonId', title:  '@Html.DisplayNameFor(model => model.PersonId)', width: 19 }
					,{ field: 'CompanyId', title:  '@Html.DisplayNameFor(model => model.CompanyId)', width: 19 }
					,{ field: 'CompanyName', title:  '@Html.DisplayNameFor(model => model.CompanyName)', width: 19 }
					,{ field: 'Suppliers', title:  '@Html.DisplayNameFor(model => model.Suppliers)', width: 19 }
					,{ field: 'CityId', title:  '@Html.DisplayNameFor(model => model.CityId)', width: 19 }
					,{ field: 'PaymentSocialMonthYL', title:  '@Html.DisplayNameFor(model => model.PaymentSocialMonthYL)', width: 19 }
					,{ field: 'RadixYL', title:  '@Html.DisplayNameFor(model => model.RadixYL)', width: 19 }
					,{ field: 'CompanyCosYL', title:  '@Html.DisplayNameFor(model => model.CompanyCosYL)', width: 19 }
					,{ field: 'PersonCostYL', title:  '@Html.DisplayNameFor(model => model.PersonCostYL)', width: 19 }
					,{ field: 'PaymentSocialMonthSY', title:  '@Html.DisplayNameFor(model => model.PaymentSocialMonthSY)', width: 19 }
					,{ field: 'RadixSY', title:  '@Html.DisplayNameFor(model => model.RadixSY)', width: 19 }
					,{ field: 'CompanyCostSY', title:  '@Html.DisplayNameFor(model => model.CompanyCostSY)', width: 19 }
					,{ field: 'PersonCostSY', title:  '@Html.DisplayNameFor(model => model.PersonCostSY)', width: 19 }
					,{ field: 'PaymentSocialMonthGS', title:  '@Html.DisplayNameFor(model => model.PaymentSocialMonthGS)', width: 19 }
					,{ field: 'RadixGS', title:  '@Html.DisplayNameFor(model => model.RadixGS)', width: 19 }
					,{ field: 'CompanyCostGS', title:  '@Html.DisplayNameFor(model => model.CompanyCostGS)', width: 19 }
					,{ field: 'PaymentSocialMonthYiL', title:  '@Html.DisplayNameFor(model => model.PaymentSocialMonthYiL)', width: 19 }
					,{ field: 'RadixYil', title:  '@Html.DisplayNameFor(model => model.RadixYil)', width: 19 }
					,{ field: 'CompanyCostYil', title:  '@Html.DisplayNameFor(model => model.CompanyCostYil)', width: 19 }
					,{ field: 'PersonCostYil', title:  '@Html.DisplayNameFor(model => model.PersonCostYil)', width: 19 }
					,{ field: 'CompanyCostYilMax', title:  '@Html.DisplayNameFor(model => model.CompanyCostYilMax)', width: 19 }
					,{ field: 'PersonCostYilMax', title:  '@Html.DisplayNameFor(model => model.PersonCostYilMax)', width: 19 }
					,{ field: 'CompanyCostShengY', title:  '@Html.DisplayNameFor(model => model.CompanyCostShengY)', width: 19 }
					,{ field: 'PaymentSocialMonthGJJ', title:  '@Html.DisplayNameFor(model => model.PaymentSocialMonthGJJ)', width: 19 }
					,{ field: 'RadixGJJ', title:  '@Html.DisplayNameFor(model => model.RadixGJJ)', width: 19 }
					,{ field: 'CompanyCostGJJ', title:  '@Html.DisplayNameFor(model => model.CompanyCostGJJ)', width: 19 }
					,{ field: 'PersonCostGJJ', title:  '@Html.DisplayNameFor(model => model.PersonCostGJJ)', width: 19 }
					,{ field: 'PaymentSocialMonthBCGJJ', title:  '@Html.DisplayNameFor(model => model.PaymentSocialMonthBCGJJ)', width: 19 }
					,{ field: 'RadixBCGJJ', title:  '@Html.DisplayNameFor(model => model.RadixBCGJJ)', width: 19 }
					,{ field: 'CompanyCostBCGJJ', title:  '@Html.DisplayNameFor(model => model.CompanyCostBCGJJ)', width: 19 }
					,{ field: 'PersonCostBCGJJ', title:  '@Html.DisplayNameFor(model => model.PersonCostBCGJJ)', width: 19 }
					,{ field: 'PayOtherSocial', title:  '@Html.DisplayNameFor(model => model.PayOtherSocial)', width: 19 }
					,{ field: 'PayOther', title:  '@Html.DisplayNameFor(model => model.PayOther)', width: 19 }
					,{ field: 'PayFee', title:  '@Html.DisplayNameFor(model => model.PayFee)', width: 19 }
                ]],
                pagination: true,
                rownumbers: true

            });

             var parent = window.dialogArguments; //获取父页面
            if (parent == "undefined" || parent == null) {
                //    不是在iframe中打开的
            } else {
                //隐藏所有的按钮和分隔符
                $(".l-btn.l-btn-plain").hide();
                $(".datagrid-btn-separator").hide();
                //添加选择按钮
                $('#flexigridData').datagrid("addToolbarItem", [{ "text": "选择", "iconCls": "icon-ok", handler: function () { flexiSelect(); } }]);
            }
        });

        //“查询”按钮，弹出查询框
        function flexiQuery() {

            //将查询条件按照分隔符拼接成字符串
            var search = "";
            $('#divQuery').find(":text,:selected,select,textarea,:hidden,:checked,:password").each(function () {
                if (this.id)
                    search = search + this.id + "&" + this.value + "^";
                else
                    search = search + this.name + "&" + this.value + "^";
            });
            //执行查询
            $('#flexigridData').datagrid('load', { search: search });
        };
        //“导出”按钮     在6.0版本中修改
        function flexiExport() {

            //将查询条件按照分隔符拼接成字符串
            var search = "";
            $('#divQuery').find(":text,:selected,select,textarea,:hidden,:checked,:password").each(function () {
                search = search + this.id + "&" + this.value + "^";
            });
          
            var p = $('#flexigridData').datagrid('options').columns[0];
            var field = [];//所有的列名
            var title = [];//所有的标题名称
            $(p).each(function () {
                field.push(this.field);
                title.push(this.title);              
            });
           
            $.post("../COST_PayTemporary/Export",
                {
                    title: title.join(","),
                    field: field.join(","),
                    sortName: $('#flexigridData').datagrid('options').sortName,
                    sortOrder: $('#flexigridData').datagrid('options').sortOrder,
                    search: search
                }, function (res) {
                    window.location.href = res;

                });
        };
        //“选择”按钮，在其他（与此页面有关联）的页面中，此页面以弹出框的形式出现，选择页面中的数据
        function flexiSelect() {

            var rows = $('#flexigridData').datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert('操作提示', '请选择数据!', 'warning');
                return false;
            }

            var arr = [];
            for (var i = 0; i < rows.length; i++) {
                arr.push(rows[i].ID);
            }
            arr.push("^");
            for (var i = 0; i < rows.length; i++) {
                arr.push(rows[i].YearMonth);
            }
            //主键列和显示列之间用 ^ 分割   每一项用 , 分割
            if (arr.length > 0) {//一条数据和多于一条
                returnParent(arr.join("&")); //每一项用 & 分割
            }
        }
        //导航到查看详细的按钮
        function getView() {

            var arr = $('#flexigridData').datagrid('getSelections');

            if (arr.length == 1) {
                window.location.href = "../COST_PayTemporary/Details/" + arr[0].ID;
               
            } else {
                $.messager.alert('操作提示', '请选择一条数据!', 'warning');
            }
            return false;
        }
        //导航到创建的按钮
        function flexiCreate() {

            window.location.href = "../COST_PayTemporary/Create";
            return false;
        }
        //导航到修改的按钮
        function flexiModify() {

            var arr = $('#flexigridData').datagrid('getSelections');

            if (arr.length == 1) {
                window.location.href = "../COST_PayTemporary/Edit/" + arr[0].ID;

            } else {
                $.messager.alert('操作提示', '请选择一条数据!', 'warning');
            }
            return false;

        };
        //删除的按钮
        function flexiDelete() {

            var rows = $('#flexigridData').datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert('操作提示', '请选择数据!', 'warning');
                return false;
            }

            var arr = [];
            for (var i = 0; i < rows.length; i++) {
                arr.push(rows[i].ID);
            }

            $.messager.confirm('操作提示', "确认删除这 " + arr.length + " 项吗？", function (r) {
                if (r) {
                    $.post("../COST_PayTemporary/Delete", { query: arr.join(",") }, function (res) {
                        if (res == "OK") {
                           //移除删除的数据

                            $.messager.alert('操作提示', '删除成功!', 'info');
                            $("#flexigridData").datagrid("reload");
                            $("#flexigridData").datagrid("clearSelections");
                        }
                        else {
                            if (res == "") {
                                $.messager.alert('操作提示', '删除失败!请查看该数据与其他模块下的信息的关联，或联系管理员。', 'info');
                            }
                            else {
                               $.messager.alert('操作提示', res, 'info');
                            }
                        }
                    });
                }
            });

        };

</script>

